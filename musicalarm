#!/bin/bash
#######################
MAXVOL=75
MUSICDIR="$HOME/Music"
DEFAULTRADIO="http://stream.wqxr.org/wqxr"
WAKEUPRADIO="$DEFAULTRADIO"
WAKEUPSONGS="$HOME/.config/mpd/playlists/awakeupsongs.m3u"

config_file=~/.config/mpd_musicalarm/config

get_config_value()
{
    config_key=$1
    config_value="$(grep "^$config_key" "$config_file" 2>/dev/null | cut -d '=' -f 2 | sed "s#~#$HOME#")"
}

test_radio()
{
    [[ "$1" == "" ]] && return 1
    valid_radio=1
    xxx=$(pwgen -N 1 -s 5)
    #this is the common idiom for finding the PID of a subshell without using a bash4 specific feature.
    ( : ; echo $PPID > /tmp/curl_$xxx.pid; curl -r 0-1024 "$1" 1>/tmp/curl_$xxx.out 2>/dev/null) &
    sleep 1
    kill $(cat /tmp/curl_$xxx.pid) 2>/dev/null
    sleep 1
    ffprobe /tmp/curl_$xxx.out 2>&1 | tail -1 | grep -q Audio && valid_radio=0
    rm /tmp/curl_$xxx.pid
    rm /tmp/curl_$xxx.out
}

init(){
    get_config_value musicalarm_maxvol
    [ "$config_value" -eq "$config_value" ] 2>/dev/null && MAXVOL=$config_value

    get_config_value musicdir
    [ -d "$config_value" ] 2>/dev/null && MUSICDIR=$config_value

    get_config_value musicalarm_playlist
    [ -f "$config_value" ] 2>/dev/null && WAKEUPSONGS=$config_value

    for i in $(seq 0 9)
    do
        get_config_value "musicalarm_radio$i"
        if [[ "$config_value" == "" ]]
        then
            valid_radio=1
        else
            test_radio "$config_value"
        fi
        if [[ $valid_radio == 0 ]]
        then
            WAKEUPRADIO=$config_value
            break
        fi
    done
    if [[ "$WAKEUPRADIO" == "$DEFAULTRADIO" ]]
    then
        test_radio "$DEFAULTRADIO"
        if [[ $valid_radio == 0 ]]
        then
            true
        else
            WAKEUPRADIO="Down"
        fi
    fi
}

mksilentmp3()
{
    # Note that I assume you have mp3 support in mpd, and libmp3lame in ffmpeg. If you don't, you'll
    # need to edit this script to change some things - make the silent mp3 a silent ogg, etc.
    #######################
    destdir=$1
    [[ -e "$destdir/5sec.mp3" ]] || ffmpeg -ar 48000 -t 5 -f s16le -acodec pcm_s16le -ac 2 -i /dev/zero -acodec libmp3lame -aq 4 "$destdir/5sec.mp3"
}

prepare()
{
    #without this, mpc will just pause after adding the silent mp3
    #if it randomly happens to be in single mode
    mpc single off
    mksilentmp3 "$MUSICDIR"
    if mpc add 5sec.mp3 2>/dev/null
    then
        true
    else
        mksilentmp3 '/tmp'
    fi
    for output in $(mpc outputs | awk '{print $2}')
    do
        mpc enable "$output"
    done
}

fadein()
{
    volume=0
    for i in $(seq 1 $MAXVOL | sort -rn)
    do
        ((volume++))
        mpc volume "$volume" >/dev/null 2>&1
        t="$(echo "scale=0;(l($i)/l(3))" | bc -l)"
        #echo -ne "$t $volume\r"
        sleep "$t" 
    done
}


play()
{
    #in order to set the volume to 0, I have to play something.
    #==========================
    mpc clear
    mpc add 5sec.mp3 || mpc add "file:///tmp/5sec.mp3"
    mpc -f "%file%"
    mpc play
    mpc volume 0
    #==========================
    if [[ "$WAKEUPRADIO" != "Down" ]]
    then
        echo "$WAKEUPRADIO" | mpc add
    elif [[ -e "$WAKEUPSONGS" ]]
    then
        shuf < "$WAKEUPSONGS" | mpc add
    else
        #sorry dude, mpd_musicalarm doesn't work if you don't have music.
        #ENODATA
        return 61
    fi
    fadein
}

init
prepare
play
